add_header X-XSS-Protection "1; mode=block";
add_header X-Frame-Options "ALLOW-FROM FIRST_DOMAINNAME";
add_header X-Content-Type-Options nosniff;

server {
  listen 80;
  listen [::]:80;
  server_name {FIRST_DOMAINNAME}; 
  location /.well-known/acme-challenge/ { root /usr/share/nginx/html; allow all; }
  location / { return 301 https://$host$request_uri; }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {FIRST_DOMAINNAME};
  client_max_body_size 50M;

  ssl_certificate     /etc/letsencrypt/live/{FIRST_DOMAINNAME}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{FIRST_DOMAINNAME}/privkey.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
  ssl_session_tickets off;

  # modern configuration, later on once tlsv1.3 is better supported, 
  ## remove the ssl_ciphers option and the TLSv1.2 from protocols
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_prefer_server_ciphers off;

  # HSTS (ngx_http_headers_module is required) (63072000 seconds)
  add_header Strict-Transport-Security "max-age=63072000" always;

  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;

  # verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate /etc/letsencrypt/live/{FIRST_DOMAINNAME}/fullchain.pem;

  # replace with the IP address of your resolver
  resolver 1.1.1.1 1.0.0.1 valid=300s;
  resolver_timeout 10s;
  
  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
    proxy_pass http://ghost_one:2368;
  }
}

### SECONDARY DOMAIN
server {
  listen 80;
  listen [::]:80;
  server_name {SECOND_DOMAINNAME};
  location /.well-known/acme-challenge/ { root /usr/share/nginx/html; allow all; }
  location / { return 301 https://$host$request_uri; }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name {SECOND_DOMAINNAME};
  client_max_body_size 50M;

  ssl_protocols TLSv1.2;
  ssl_ciphers HIGH:!MEDIUM:!LOW:!aNULL:!NULL:!SHA;
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  ssl_certificate     /etc/letsencrypt/live/{FIRST_DOMAINNAME}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{FIRST_DOMAINNAME}/privkey.pem;

  location / {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
    proxy_pass http://ghost_two:2369;
  }
}